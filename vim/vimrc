source ~/.vim/plugins.vim

set omnifunc=syntaxcomplete#Complete

set hidden " don't unload buffer when switching away
set modeline " allow per-file settings via modeline
set exrc " enable per-directory .vimrc files
set secure " disable unsafe commands in local .vimrc files
set encoding=utf-8 fileencoding=utf-8 termencoding=utf-8 " saving and encoding
set nobackup nowritebackup noswapfile autoread " no backup or swap
set hlsearch incsearch ignorecase smartcase " search
set wildmenu " completion
set backspace=indent,eol,start " sane backspace
set clipboard=unnamedplus " use the system clipboard for yank/put/delete
set mouse=a " enable mouse for all modes settings
set nomousehide " don't hide the mouse cursor while typing
set mousemodel=popup " right-click pops up context menu
set ruler " show cursor position in status bar
set number " show line numbers on left
set nofoldenable " I fucking hate code folding
set scrolloff=10 " scroll the window so we can always see 10 lines around the cursor
set textwidth=80 " show a vertical line at the 79th character
set cursorline " highlight the current line
set cursorcolumn " highlight the current line
set printoptions=paper:letter " use letter as the print output format
set guioptions-=T " turn off GUI toolbar (icons)
set guioptions-=r " turn off GUI right scrollbar
set guioptions-=L " turn off GUI left scrollbar
set winaltkeys=no " turn off stupid fucking alt shortcuts
set laststatus=2 " always show status bar
set cin wrap

" middle-click paste
map! <S-Insert> <MiddleMouse>

" appearance
syntax on
set t_Co=256 " 256 colors in terminal
colorscheme evening

" override highlight settings
highlight DiffText gui=none
highlight Macro gui=none
highlight SpecialKey gui=none
highlight Special gui=none
highlight StorageClass gui=none
highlight Tag gui=none
highlight LineNr guifg=#050505
highlight LineNr ctermfg=grey
highlight OverLength ctermbg=red ctermfg=white guibg=#592929
match OverLength /\%81v.\+/

" highlight the 80th column
if exists('+colorcolumn')
  let &colorcolumn="80"
else
  autocmd BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

" formatting
filetype plugin indent on
set shiftwidth=2 tabstop=2 softtabstop=2 expandtab autoindent
autocmd filetype c,asm,python setlocal shiftwidth=4 tabstop=4 softtabstop=4

" Makefile no expandtab
autocmd FileType make setlocal noexpandtab

" bindings to:
" - cd current window to parent directory of file
" - generate ctags
" - flush command-t index
" - better range
" - fix white space
" - rerun previous :command
" - underline a line with equals (h1 in Markdown documents)
" - underline a line with hyphens (h2 in Markdown documents)
" - sort selection
noremap <Leader>cd :lcd %:h<CR>:pwd<CR>
noremap <Leader>ct :!ctags -R .<CR><CR>
noremap <Leader>cf :CommandTFlush<CR>
noremap ' `
map <Leader>W :FixWhitespace<CR>
map <Leader>] @:
map <Leader>= yypVr=
map <Leader>- yypVr-
map <Leader>s :sort<CR>

" fugitive shortcuts
noremap <Leader>gs :Gstatus<CR>
noremap <Leader>gc :Gcommit<CR>
noremap <Leader>ga :Gwrite<CR>
noremap <Leader>gl :Glog<CR>
noremap <Leader>gd :Gdiff<CR>
noremap <Leader>gb :Gblame<CR>

" move between windows with M-hjkl (urxvt then gvim)
noremap <M-h> <C-w>h
noremap <M-j> <C-w>j
noremap <M-k> <C-w>k
noremap <M-l> <C-w>l
noremap <C-k> :tabnext<CR>
noremap <C-j> :tabprev<CR>

" NERDTree
let NERDTreeWinPos='right'
map <C-Bslash> :NERDTreeToggle<CR>

source ~/.vim/localrc.vim
